<?php

namespace App\Exceptions;

use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;
use Throwable;
use Tymon\JWTAuth\Exceptions\JWTException;
use Tymon\JWTAuth\Exceptions\TokenExpiredException;
use Tymon\JWTAuth\Exceptions\TokenInvalidException;
use Illuminate\Database\Eloquent\ModelNotFoundException;

class Handler extends ExceptionHandler
{
    /**
     * A list of the exception types that are not reported.
     *
     * @var array
     */
    protected $dontReport = [
        //
    ];

    /**
     * A list of the inputs that are never flashed for validation exceptions.
     *
     * @var array
     */
    protected $dontFlash = [
        'password',
        'password_confirmation',
    ];

    /**
     * Register the exception handling callbacks for the application.
     *
     * @return void
     */
    public function register()
    {
        //
    }
    public function render($request, Throwable $e)
    {
        if ($e instanceof TokenInvalidException) {
            return response()->json(['error' => 'Token is invalid'], 400);
        } else if ($e instanceof TokenExpiredException) {
            return response()->json(['error' => 'Token is Expired'], 400);
        } else if ($e instanceof JWTException) {
            return response()->json(['error' => 'Theres probleme with your token'], 400);
        } else if ($e instanceof ModelNotFoundException && $request->wantsJson()) {
            /* By default when a specified model is not found,
            Laravel will throw a ModelNotFoundException
            and renders a 404 page */
            return response()->json([
                'error' => 'Resource not found'
            ], 404);
        }
        return parent::render($request, $e); // TODO: Change the autogenerated stub
    }
}
